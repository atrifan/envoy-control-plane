// Code generated by protoc-gen-go. DO NOT EDIT.
// source: route-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RouteData struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteData) Reset()         { *m = RouteData{} }
func (m *RouteData) String() string { return proto.CompactTextString(m) }
func (*RouteData) ProtoMessage()    {}
func (*RouteData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f194dd8b0fd8ea20, []int{0}
}

func (m *RouteData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteData.Unmarshal(m, b)
}
func (m *RouteData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteData.Marshal(b, m, deterministic)
}
func (m *RouteData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteData.Merge(m, src)
}
func (m *RouteData) XXX_Size() int {
	return xxx_messageInfo_RouteData.Size(m)
}
func (m *RouteData) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteData.DiscardUnknown(m)
}

var xxx_messageInfo_RouteData proto.InternalMessageInfo

func (m *RouteData) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

type RouteInfo struct {
	Route                *RouteData `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	Type                 string     `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Value                string     `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RouteInfo) Reset()         { *m = RouteInfo{} }
func (m *RouteInfo) String() string { return proto.CompactTextString(m) }
func (*RouteInfo) ProtoMessage()    {}
func (*RouteInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f194dd8b0fd8ea20, []int{1}
}

func (m *RouteInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteInfo.Unmarshal(m, b)
}
func (m *RouteInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteInfo.Marshal(b, m, deterministic)
}
func (m *RouteInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteInfo.Merge(m, src)
}
func (m *RouteInfo) XXX_Size() int {
	return xxx_messageInfo_RouteInfo.Size(m)
}
func (m *RouteInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RouteInfo proto.InternalMessageInfo

func (m *RouteInfo) GetRoute() *RouteData {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *RouteInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RouteInfo) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Cluster message
// last id 4
type Route struct {
	// Unique clusterName
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Domains              []string     `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
	RouteInfo            []*RouteInfo `protobuf:"bytes,3,rep,name=routeInfo,proto3" json:"routeInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_f194dd8b0fd8ea20, []int{2}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Route) GetDomains() []string {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *Route) GetRouteInfo() []*RouteInfo {
	if m != nil {
		return m.RouteInfo
	}
	return nil
}

// Request data to create new Cluster
type CreateRequestRoute struct {
	// for which node to create the cluster
	NodeId               string   `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Route                *Route   `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequestRoute) Reset()         { *m = CreateRequestRoute{} }
func (m *CreateRequestRoute) String() string { return proto.CompactTextString(m) }
func (*CreateRequestRoute) ProtoMessage()    {}
func (*CreateRequestRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_f194dd8b0fd8ea20, []int{3}
}

func (m *CreateRequestRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequestRoute.Unmarshal(m, b)
}
func (m *CreateRequestRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequestRoute.Marshal(b, m, deterministic)
}
func (m *CreateRequestRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequestRoute.Merge(m, src)
}
func (m *CreateRequestRoute) XXX_Size() int {
	return xxx_messageInfo_CreateRequestRoute.Size(m)
}
func (m *CreateRequestRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequestRoute.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequestRoute proto.InternalMessageInfo

func (m *CreateRequestRoute) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *CreateRequestRoute) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

// Contains data of created Cluster
// last id 2
type CreateResponseRoute struct {
	// The node where the cluster has been created
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// versions of the created clusters
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponseRoute) Reset()         { *m = CreateResponseRoute{} }
func (m *CreateResponseRoute) String() string { return proto.CompactTextString(m) }
func (*CreateResponseRoute) ProtoMessage()    {}
func (*CreateResponseRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_f194dd8b0fd8ea20, []int{4}
}

func (m *CreateResponseRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponseRoute.Unmarshal(m, b)
}
func (m *CreateResponseRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponseRoute.Marshal(b, m, deterministic)
}
func (m *CreateResponseRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponseRoute.Merge(m, src)
}
func (m *CreateResponseRoute) XXX_Size() int {
	return xxx_messageInfo_CreateResponseRoute.Size(m)
}
func (m *CreateResponseRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponseRoute.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponseRoute proto.InternalMessageInfo

func (m *CreateResponseRoute) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *CreateResponseRoute) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Contains list of all clusters on a node
type ReadResponseForNodeRoute struct {
	// API versioning: it is my best practice to specify version explicitly
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// List of all todo tasks
	Route                string   `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadResponseForNodeRoute) Reset()         { *m = ReadResponseForNodeRoute{} }
func (m *ReadResponseForNodeRoute) String() string { return proto.CompactTextString(m) }
func (*ReadResponseForNodeRoute) ProtoMessage()    {}
func (*ReadResponseForNodeRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_f194dd8b0fd8ea20, []int{5}
}

func (m *ReadResponseForNodeRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponseForNodeRoute.Unmarshal(m, b)
}
func (m *ReadResponseForNodeRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponseForNodeRoute.Marshal(b, m, deterministic)
}
func (m *ReadResponseForNodeRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponseForNodeRoute.Merge(m, src)
}
func (m *ReadResponseForNodeRoute) XXX_Size() int {
	return xxx_messageInfo_ReadResponseForNodeRoute.Size(m)
}
func (m *ReadResponseForNodeRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponseForNodeRoute.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponseForNodeRoute proto.InternalMessageInfo

func (m *ReadResponseForNodeRoute) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ReadResponseForNodeRoute) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

// Request to get a specific cluster
type ReadRequestRoute struct {
	// The nodeId where you want to get the cluster from
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// The version of the cluster that you want to retrieve
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequestRoute) Reset()         { *m = ReadRequestRoute{} }
func (m *ReadRequestRoute) String() string { return proto.CompactTextString(m) }
func (*ReadRequestRoute) ProtoMessage()    {}
func (*ReadRequestRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_f194dd8b0fd8ea20, []int{6}
}

func (m *ReadRequestRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequestRoute.Unmarshal(m, b)
}
func (m *ReadRequestRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequestRoute.Marshal(b, m, deterministic)
}
func (m *ReadRequestRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequestRoute.Merge(m, src)
}
func (m *ReadRequestRoute) XXX_Size() int {
	return xxx_messageInfo_ReadRequestRoute.Size(m)
}
func (m *ReadRequestRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequestRoute.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequestRoute proto.InternalMessageInfo

func (m *ReadRequestRoute) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ReadRequestRoute) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*RouteData)(nil), "v1.RouteData")
	proto.RegisterType((*RouteInfo)(nil), "v1.RouteInfo")
	proto.RegisterType((*Route)(nil), "v1.Route")
	proto.RegisterType((*CreateRequestRoute)(nil), "v1.CreateRequestRoute")
	proto.RegisterType((*CreateResponseRoute)(nil), "v1.CreateResponseRoute")
	proto.RegisterType((*ReadResponseForNodeRoute)(nil), "v1.ReadResponseForNodeRoute")
	proto.RegisterType((*ReadRequestRoute)(nil), "v1.ReadRequestRoute")
}

func init() { proto.RegisterFile("route-service.proto", fileDescriptor_f194dd8b0fd8ea20) }

var fileDescriptor_f194dd8b0fd8ea20 = []byte{
	// 540 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4f, 0x6f, 0xd3, 0x3c,
	0x18, 0x57, 0x92, 0xb5, 0x55, 0x9f, 0xbd, 0xd3, 0x5b, 0x79, 0x03, 0xa2, 0xaa, 0x12, 0xc1, 0x08,
	0x69, 0x2a, 0x34, 0x59, 0x4b, 0x25, 0xa4, 0x71, 0xa1, 0x30, 0x01, 0x3b, 0xc0, 0x21, 0x88, 0x0b,
	0x37, 0x37, 0x79, 0xd6, 0x05, 0xa5, 0x76, 0x66, 0x3b, 0x19, 0x68, 0xda, 0x85, 0x8f, 0x00, 0x37,
	0x24, 0x0e, 0x7c, 0x26, 0x2e, 0x7c, 0x00, 0x3e, 0x08, 0x8a, 0x93, 0x6c, 0x85, 0x6a, 0xc0, 0x29,
	0x7e, 0x1e, 0xff, 0xfc, 0xfb, 0xf3, 0x38, 0x86, 0x6d, 0x29, 0x72, 0x8d, 0x23, 0x85, 0xb2, 0x48,
	0x22, 0xf4, 0x33, 0x29, 0xb4, 0x20, 0x76, 0x31, 0xee, 0x0f, 0x16, 0x42, 0x2c, 0x52, 0x0c, 0x58,
	0x96, 0x04, 0x8c, 0x73, 0xa1, 0x99, 0x4e, 0x04, 0x57, 0x15, 0xa2, 0x7f, 0xcf, 0x7c, 0xa2, 0xd1,
	0x02, 0xf9, 0x48, 0x9d, 0xb2, 0xc5, 0x02, 0x65, 0x20, 0x32, 0x83, 0x58, 0x47, 0xd3, 0x3b, 0xd0,
	0x0d, 0x4b, 0x99, 0x03, 0xa6, 0x19, 0x71, 0xa1, 0x13, 0xa5, 0xb9, 0xd2, 0x28, 0x5d, 0xcb, 0xb3,
	0x76, 0xbb, 0x61, 0x53, 0xd2, 0x37, 0x35, 0xec, 0x90, 0x1f, 0x09, 0x72, 0x1b, 0x5a, 0xc6, 0x9a,
	0x01, 0x6d, 0x4e, 0xb6, 0xfc, 0x62, 0xec, 0x5f, 0x90, 0x84, 0xd5, 0x1e, 0x21, 0xb0, 0xa1, 0xdf,
	0x67, 0xe8, 0xda, 0x86, 0xc8, 0xac, 0xc9, 0x0e, 0xb4, 0x0a, 0x96, 0xe6, 0xe8, 0x3a, 0xa6, 0x59,
	0x15, 0x74, 0x0e, 0xad, 0xb0, 0x39, 0xc2, 0xd9, 0x12, 0x6b, 0x6d, 0xb3, 0x2e, 0x2d, 0xc5, 0x62,
	0xc9, 0x12, 0xae, 0x5c, 0xdb, 0x73, 0x4a, 0x4b, 0x75, 0x49, 0xee, 0x42, 0x57, 0x36, 0x96, 0x5c,
	0xc7, 0x73, 0x7e, 0x71, 0x52, 0x36, 0xc3, 0xcb, 0x7d, 0xfa, 0x02, 0xc8, 0x13, 0x89, 0x4c, 0x63,
	0x88, 0x27, 0x39, 0x2a, 0x5d, 0x09, 0x5e, 0x87, 0x36, 0x17, 0x31, 0x1e, 0xc6, 0xb5, 0x64, 0x5d,
	0x91, 0x9b, 0x4d, 0x40, 0xdb, 0x04, 0xec, 0x5e, 0xd0, 0xd6, 0xe1, 0xe8, 0x33, 0xd8, 0x6e, 0xe8,
	0x54, 0x26, 0xb8, 0xc2, 0x3f, 0xf3, 0xb9, 0xd0, 0x29, 0x50, 0xaa, 0x44, 0xf0, 0x7a, 0x1c, 0x4d,
	0x49, 0x9f, 0x83, 0x1b, 0x22, 0x8b, 0x1b, 0x9a, 0xa7, 0x42, 0xbe, 0x14, 0xf1, 0x5f, 0xd8, 0x76,
	0x56, 0xdd, 0x75, 0x1b, 0x4b, 0x07, 0xd0, 0xab, 0x98, 0xfe, 0x21, 0xdf, 0x95, 0x7e, 0x26, 0xdf,
	0x2d, 0xf8, 0xcf, 0x9c, 0x7d, 0x55, 0xfd, 0x75, 0xe4, 0x04, 0x06, 0x25, 0xed, 0x2c, 0x4d, 0x4d,
	0x5b, 0xd5, 0x0e, 0x67, 0x3c, 0xae, 0x24, 0x06, 0x66, 0x36, 0x57, 0x44, 0xe8, 0x5f, 0x4e, 0x8e,
	0xee, 0x7e, 0xf8, 0xf6, 0xe3, 0x93, 0x4d, 0x89, 0x17, 0x14, 0xe3, 0xa0, 0xf4, 0xa1, 0x82, 0xb3,
	0xca, 0xce, 0x79, 0x60, 0x12, 0x04, 0x67, 0xe6, 0x73, 0x4e, 0x5e, 0xc3, 0x66, 0x3d, 0xdc, 0x2a,
	0x44, 0xc9, 0xb1, 0x7e, 0x79, 0xfd, 0x1b, 0xab, 0xfd, 0x95, 0x5b, 0xa0, 0xd7, 0x8c, 0xd2, 0xff,
	0x14, 0x4a, 0x25, 0xc3, 0xa9, 0xf6, 0xad, 0xe1, 0xe3, 0xaf, 0xd6, 0xc7, 0xd9, 0x17, 0x8b, 0x3c,
	0x80, 0x2d, 0x03, 0xf3, 0xea, 0x77, 0x45, 0x6f, 0xfd, 0xd6, 0xe8, 0xf7, 0xb4, 0x4c, 0x8e, 0x18,
	0x7f, 0xc4, 0x62, 0x31, 0x47, 0x3f, 0x12, 0xcb, 0x89, 0x33, 0xf6, 0xf7, 0x86, 0x96, 0x35, 0xe9,
	0xb1, 0x2c, 0x4b, 0x93, 0xc8, 0x3c, 0xa0, 0xe0, 0xad, 0x12, 0x7c, 0x7f, 0xad, 0x13, 0x3e, 0x04,
	0x67, 0xba, 0x37, 0x25, 0x53, 0x18, 0x86, 0xa8, 0x73, 0xc9, 0x31, 0xf6, 0x4e, 0x8f, 0x91, 0x7b,
	0xfa, 0x18, 0x3d, 0x89, 0x4a, 0xe4, 0x32, 0x42, 0x2f, 0x16, 0xa8, 0x3c, 0x2e, 0xb4, 0x87, 0xef,
	0x12, 0xa5, 0x7d, 0xd2, 0x86, 0x8d, 0xcf, 0xb6, 0xd5, 0x99, 0xb7, 0xcd, 0xa3, 0xbc, 0xff, 0x33,
	0x00, 0x00, 0xff, 0xff, 0x91, 0x5d, 0x30, 0x18, 0xfb, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouteServiceClient is the client API for RouteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouteServiceClient interface {
	// Read all clusters for a node
	ReadAllRoutesForNodeAndRoute(ctx context.Context, in *ReadResponseForNodeRoute, opts ...grpc.CallOption) (*Route, error)
	// Create new clusters
	CreateRoute(ctx context.Context, in *CreateRequestRoute, opts ...grpc.CallOption) (*CreateResponseRoute, error)
}

type routeServiceClient struct {
	cc *grpc.ClientConn
}

func NewRouteServiceClient(cc *grpc.ClientConn) RouteServiceClient {
	return &routeServiceClient{cc}
}

func (c *routeServiceClient) ReadAllRoutesForNodeAndRoute(ctx context.Context, in *ReadResponseForNodeRoute, opts ...grpc.CallOption) (*Route, error) {
	out := new(Route)
	err := c.cc.Invoke(ctx, "/v1.RouteService/ReadAllRoutesForNodeAndRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeServiceClient) CreateRoute(ctx context.Context, in *CreateRequestRoute, opts ...grpc.CallOption) (*CreateResponseRoute, error) {
	out := new(CreateResponseRoute)
	err := c.cc.Invoke(ctx, "/v1.RouteService/CreateRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouteServiceServer is the server API for RouteService service.
type RouteServiceServer interface {
	// Read all clusters for a node
	ReadAllRoutesForNodeAndRoute(context.Context, *ReadResponseForNodeRoute) (*Route, error)
	// Create new clusters
	CreateRoute(context.Context, *CreateRequestRoute) (*CreateResponseRoute, error)
}

// UnimplementedRouteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRouteServiceServer struct {
}

func (*UnimplementedRouteServiceServer) ReadAllRoutesForNodeAndRoute(ctx context.Context, req *ReadResponseForNodeRoute) (*Route, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAllRoutesForNodeAndRoute not implemented")
}
func (*UnimplementedRouteServiceServer) CreateRoute(ctx context.Context, req *CreateRequestRoute) (*CreateResponseRoute, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoute not implemented")
}

func RegisterRouteServiceServer(s *grpc.Server, srv RouteServiceServer) {
	s.RegisterService(&_RouteService_serviceDesc, srv)
}

func _RouteService_ReadAllRoutesForNodeAndRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadResponseForNodeRoute)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).ReadAllRoutesForNodeAndRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.RouteService/ReadAllRoutesForNodeAndRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).ReadAllRoutesForNodeAndRoute(ctx, req.(*ReadResponseForNodeRoute))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteService_CreateRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequestRoute)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).CreateRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.RouteService/CreateRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).CreateRoute(ctx, req.(*CreateRequestRoute))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.RouteService",
	HandlerType: (*RouteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadAllRoutesForNodeAndRoute",
			Handler:    _RouteService_ReadAllRoutesForNodeAndRoute_Handler,
		},
		{
			MethodName: "CreateRoute",
			Handler:    _RouteService_CreateRoute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "route-service.proto",
}
