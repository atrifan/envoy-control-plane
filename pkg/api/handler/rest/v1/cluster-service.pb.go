// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//Hosts message
//last id = 2
type Hosts struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hosts) Reset()         { *m = Hosts{} }
func (m *Hosts) String() string { return proto.CompactTextString(m) }
func (*Hosts) ProtoMessage()    {}
func (*Hosts) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{0}
}

func (m *Hosts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hosts.Unmarshal(m, b)
}
func (m *Hosts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hosts.Marshal(b, m, deterministic)
}
func (m *Hosts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hosts.Merge(m, src)
}
func (m *Hosts) XXX_Size() int {
	return xxx_messageInfo_Hosts.Size(m)
}
func (m *Hosts) XXX_DiscardUnknown() {
	xxx_messageInfo_Hosts.DiscardUnknown(m)
}

var xxx_messageInfo_Hosts proto.InternalMessageInfo

func (m *Hosts) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Hosts) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Cluster message
// last id 4
type Cluster struct {
	// Unique clusterName
	ClusterName string `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	// Type of lb policy
	LbPolicy string `protobuf:"bytes,2,opt,name=LbPolicy,proto3" json:"LbPolicy,omitempty"`
	// list of hosts
	Hosts                []*Hosts `protobuf:"bytes,3,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{1}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *Cluster) GetLbPolicy() string {
	if m != nil {
		return m.LbPolicy
	}
	return ""
}

func (m *Cluster) GetHosts() []*Hosts {
	if m != nil {
		return m.Hosts
	}
	return nil
}

// Request data to create new Cluster
type CreateRequestCluster struct {
	// for which node to create the cluster
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// List of clusters
	Cluster []*Cluster `protobuf:"bytes,2,rep,name=cluster,proto3" json:"cluster,omitempty"`
	// the version
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequestCluster) Reset()         { *m = CreateRequestCluster{} }
func (m *CreateRequestCluster) String() string { return proto.CompactTextString(m) }
func (*CreateRequestCluster) ProtoMessage()    {}
func (*CreateRequestCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{2}
}

func (m *CreateRequestCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequestCluster.Unmarshal(m, b)
}
func (m *CreateRequestCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequestCluster.Marshal(b, m, deterministic)
}
func (m *CreateRequestCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequestCluster.Merge(m, src)
}
func (m *CreateRequestCluster) XXX_Size() int {
	return xxx_messageInfo_CreateRequestCluster.Size(m)
}
func (m *CreateRequestCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequestCluster.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequestCluster proto.InternalMessageInfo

func (m *CreateRequestCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *CreateRequestCluster) GetCluster() []*Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *CreateRequestCluster) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Contains data of created Cluster
// last id 2
type CreateResponseCluster struct {
	// The node where the cluster has been created
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// versions of the created clusters
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponseCluster) Reset()         { *m = CreateResponseCluster{} }
func (m *CreateResponseCluster) String() string { return proto.CompactTextString(m) }
func (*CreateResponseCluster) ProtoMessage()    {}
func (*CreateResponseCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{3}
}

func (m *CreateResponseCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponseCluster.Unmarshal(m, b)
}
func (m *CreateResponseCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponseCluster.Marshal(b, m, deterministic)
}
func (m *CreateResponseCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponseCluster.Merge(m, src)
}
func (m *CreateResponseCluster) XXX_Size() int {
	return xxx_messageInfo_CreateResponseCluster.Size(m)
}
func (m *CreateResponseCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponseCluster.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponseCluster proto.InternalMessageInfo

func (m *CreateResponseCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *CreateResponseCluster) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Request data to update a cluster
type UpdateRequestCluster struct {
	// node for which we create a cluster
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// Cluster object to update
	Cluster              *Cluster `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequestCluster) Reset()         { *m = UpdateRequestCluster{} }
func (m *UpdateRequestCluster) String() string { return proto.CompactTextString(m) }
func (*UpdateRequestCluster) ProtoMessage()    {}
func (*UpdateRequestCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{4}
}

func (m *UpdateRequestCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequestCluster.Unmarshal(m, b)
}
func (m *UpdateRequestCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequestCluster.Marshal(b, m, deterministic)
}
func (m *UpdateRequestCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequestCluster.Merge(m, src)
}
func (m *UpdateRequestCluster) XXX_Size() int {
	return xxx_messageInfo_UpdateRequestCluster.Size(m)
}
func (m *UpdateRequestCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequestCluster.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequestCluster proto.InternalMessageInfo

func (m *UpdateRequestCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *UpdateRequestCluster) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

// Contains status of update operation
type UpdateResponseCluster struct {
	// API versioning: it is my best practice to specify version explicitly
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// Contains number of entities have beed updated
	// Equals 1 in case of succesfull update
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponseCluster) Reset()         { *m = UpdateResponseCluster{} }
func (m *UpdateResponseCluster) String() string { return proto.CompactTextString(m) }
func (*UpdateResponseCluster) ProtoMessage()    {}
func (*UpdateResponseCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{5}
}

func (m *UpdateResponseCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponseCluster.Unmarshal(m, b)
}
func (m *UpdateResponseCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponseCluster.Marshal(b, m, deterministic)
}
func (m *UpdateResponseCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponseCluster.Merge(m, src)
}
func (m *UpdateResponseCluster) XXX_Size() int {
	return xxx_messageInfo_UpdateResponseCluster.Size(m)
}
func (m *UpdateResponseCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponseCluster.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponseCluster proto.InternalMessageInfo

func (m *UpdateResponseCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *UpdateResponseCluster) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Request data to delete cluster from a node
type DeleteRequestCluster struct {
	// node id
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// version of cluster to delete
	VersionId            string   `protobuf:"bytes,2,opt,name=versionId,proto3" json:"versionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequestCluster) Reset()         { *m = DeleteRequestCluster{} }
func (m *DeleteRequestCluster) String() string { return proto.CompactTextString(m) }
func (*DeleteRequestCluster) ProtoMessage()    {}
func (*DeleteRequestCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{6}
}

func (m *DeleteRequestCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequestCluster.Unmarshal(m, b)
}
func (m *DeleteRequestCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequestCluster.Marshal(b, m, deterministic)
}
func (m *DeleteRequestCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequestCluster.Merge(m, src)
}
func (m *DeleteRequestCluster) XXX_Size() int {
	return xxx_messageInfo_DeleteRequestCluster.Size(m)
}
func (m *DeleteRequestCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequestCluster.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequestCluster proto.InternalMessageInfo

func (m *DeleteRequestCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *DeleteRequestCluster) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

// Contains status of delete operation
type DeleteResponseCluster struct {
	// nodeId response
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// contains the versions of deleted clusters
	Deleted              []string `protobuf:"bytes,2,rep,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponseCluster) Reset()         { *m = DeleteResponseCluster{} }
func (m *DeleteResponseCluster) String() string { return proto.CompactTextString(m) }
func (*DeleteResponseCluster) ProtoMessage()    {}
func (*DeleteResponseCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{7}
}

func (m *DeleteResponseCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponseCluster.Unmarshal(m, b)
}
func (m *DeleteResponseCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponseCluster.Marshal(b, m, deterministic)
}
func (m *DeleteResponseCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponseCluster.Merge(m, src)
}
func (m *DeleteResponseCluster) XXX_Size() int {
	return xxx_messageInfo_DeleteResponseCluster.Size(m)
}
func (m *DeleteResponseCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponseCluster.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponseCluster proto.InternalMessageInfo

func (m *DeleteResponseCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *DeleteResponseCluster) GetDeleted() []string {
	if m != nil {
		return m.Deleted
	}
	return nil
}

// Request data to read all clusters for a node
type ReadAllRequestForNodeCluster struct {
	// API versioning: it is my best practice to specify version explicitly
	NodeId               string   `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllRequestForNodeCluster) Reset()         { *m = ReadAllRequestForNodeCluster{} }
func (m *ReadAllRequestForNodeCluster) String() string { return proto.CompactTextString(m) }
func (*ReadAllRequestForNodeCluster) ProtoMessage()    {}
func (*ReadAllRequestForNodeCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{8}
}

func (m *ReadAllRequestForNodeCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllRequestForNodeCluster.Unmarshal(m, b)
}
func (m *ReadAllRequestForNodeCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllRequestForNodeCluster.Marshal(b, m, deterministic)
}
func (m *ReadAllRequestForNodeCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllRequestForNodeCluster.Merge(m, src)
}
func (m *ReadAllRequestForNodeCluster) XXX_Size() int {
	return xxx_messageInfo_ReadAllRequestForNodeCluster.Size(m)
}
func (m *ReadAllRequestForNodeCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllRequestForNodeCluster.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllRequestForNodeCluster proto.InternalMessageInfo

func (m *ReadAllRequestForNodeCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

// Contains list of all clusters on a node
type ReadAllResponseForNodeCluster struct {
	// API versioning: it is my best practice to specify version explicitly
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// List of all todo tasks
	Clusters             []*Cluster `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReadAllResponseForNodeCluster) Reset()         { *m = ReadAllResponseForNodeCluster{} }
func (m *ReadAllResponseForNodeCluster) String() string { return proto.CompactTextString(m) }
func (*ReadAllResponseForNodeCluster) ProtoMessage()    {}
func (*ReadAllResponseForNodeCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{9}
}

func (m *ReadAllResponseForNodeCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllResponseForNodeCluster.Unmarshal(m, b)
}
func (m *ReadAllResponseForNodeCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllResponseForNodeCluster.Marshal(b, m, deterministic)
}
func (m *ReadAllResponseForNodeCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllResponseForNodeCluster.Merge(m, src)
}
func (m *ReadAllResponseForNodeCluster) XXX_Size() int {
	return xxx_messageInfo_ReadAllResponseForNodeCluster.Size(m)
}
func (m *ReadAllResponseForNodeCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllResponseForNodeCluster.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllResponseForNodeCluster proto.InternalMessageInfo

func (m *ReadAllResponseForNodeCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ReadAllResponseForNodeCluster) GetClusters() []*Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

// Request to get a specific cluster
type ReadRequestCluster struct {
	// The nodeId where you want to get the cluster from
	NodeId string `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	// The version of the cluster that you want to retrieve
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequestCluster) Reset()         { *m = ReadRequestCluster{} }
func (m *ReadRequestCluster) String() string { return proto.CompactTextString(m) }
func (*ReadRequestCluster) ProtoMessage()    {}
func (*ReadRequestCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{10}
}

func (m *ReadRequestCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequestCluster.Unmarshal(m, b)
}
func (m *ReadRequestCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequestCluster.Marshal(b, m, deterministic)
}
func (m *ReadRequestCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequestCluster.Merge(m, src)
}
func (m *ReadRequestCluster) XXX_Size() int {
	return xxx_messageInfo_ReadRequestCluster.Size(m)
}
func (m *ReadRequestCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequestCluster.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequestCluster proto.InternalMessageInfo

func (m *ReadRequestCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ReadRequestCluster) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type ReadResponseCluster struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Cluster              *Cluster `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadResponseCluster) Reset()         { *m = ReadResponseCluster{} }
func (m *ReadResponseCluster) String() string { return proto.CompactTextString(m) }
func (*ReadResponseCluster) ProtoMessage()    {}
func (*ReadResponseCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8681304beda874e, []int{11}
}

func (m *ReadResponseCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponseCluster.Unmarshal(m, b)
}
func (m *ReadResponseCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponseCluster.Marshal(b, m, deterministic)
}
func (m *ReadResponseCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponseCluster.Merge(m, src)
}
func (m *ReadResponseCluster) XXX_Size() int {
	return xxx_messageInfo_ReadResponseCluster.Size(m)
}
func (m *ReadResponseCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponseCluster.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponseCluster proto.InternalMessageInfo

func (m *ReadResponseCluster) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ReadResponseCluster) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func init() {
	proto.RegisterType((*Hosts)(nil), "v1.Hosts")
	proto.RegisterType((*Cluster)(nil), "v1.Cluster")
	proto.RegisterType((*CreateRequestCluster)(nil), "v1.CreateRequestCluster")
	proto.RegisterType((*CreateResponseCluster)(nil), "v1.CreateResponseCluster")
	proto.RegisterType((*UpdateRequestCluster)(nil), "v1.UpdateRequestCluster")
	proto.RegisterType((*UpdateResponseCluster)(nil), "v1.UpdateResponseCluster")
	proto.RegisterType((*DeleteRequestCluster)(nil), "v1.DeleteRequestCluster")
	proto.RegisterType((*DeleteResponseCluster)(nil), "v1.DeleteResponseCluster")
	proto.RegisterType((*ReadAllRequestForNodeCluster)(nil), "v1.ReadAllRequestForNodeCluster")
	proto.RegisterType((*ReadAllResponseForNodeCluster)(nil), "v1.ReadAllResponseForNodeCluster")
	proto.RegisterType((*ReadRequestCluster)(nil), "v1.ReadRequestCluster")
	proto.RegisterType((*ReadResponseCluster)(nil), "v1.ReadResponseCluster")
}

func init() { proto.RegisterFile("cluster-service.proto", fileDescriptor_e8681304beda874e) }

var fileDescriptor_e8681304beda874e = []byte{
	// 618 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdd, 0x4e, 0xd4, 0x4e,
	0x14, 0x4f, 0xbb, 0xc0, 0xb2, 0x87, 0x3f, 0xfc, 0x71, 0xe4, 0xa3, 0x6e, 0x20, 0x8e, 0x35, 0x46,
	0xb2, 0xca, 0x96, 0x5d, 0x89, 0x17, 0x70, 0x23, 0x62, 0x88, 0x24, 0x84, 0x98, 0x2a, 0x97, 0x26,
	0x96, 0xf6, 0xb8, 0x5b, 0x53, 0x66, 0xea, 0xcc, 0xec, 0xa2, 0x51, 0x6f, 0x7c, 0x04, 0xbd, 0xf3,
	0xce, 0x0b, 0x5f, 0x48, 0x5f, 0xc1, 0x07, 0x31, 0x9d, 0x4e, 0x71, 0x37, 0x14, 0x69, 0xf4, 0x6a,
	0x77, 0xce, 0xcc, 0xef, 0x63, 0x7e, 0x3d, 0x73, 0x60, 0x31, 0x4c, 0x06, 0x52, 0xa1, 0x58, 0x97,
	0x28, 0x86, 0x71, 0x88, 0xed, 0x54, 0x70, 0xc5, 0x89, 0x3d, 0xec, 0x34, 0x57, 0x7a, 0x9c, 0xf7,
	0x12, 0xf4, 0x82, 0x34, 0xf6, 0x02, 0xc6, 0xb8, 0x0a, 0x54, 0xcc, 0x99, 0xcc, 0x4f, 0x34, 0xef,
	0xea, 0x9f, 0x70, 0xbd, 0x87, 0x6c, 0x5d, 0x9e, 0x06, 0xbd, 0x1e, 0x0a, 0x8f, 0xa7, 0xfa, 0xc4,
	0xf9, 0xd3, 0xee, 0x1d, 0x98, 0x7c, 0xcc, 0xa5, 0x92, 0x64, 0x0e, 0xec, 0x38, 0x75, 0x2c, 0x6a,
	0xad, 0x35, 0x7c, 0x3b, 0x4e, 0x09, 0x81, 0x89, 0x94, 0x0b, 0xe5, 0xd8, 0xd4, 0x5a, 0x9b, 0xf5,
	0xf5, 0x7f, 0xb7, 0x0f, 0xf5, 0xdd, 0xdc, 0x15, 0xa1, 0x30, 0x63, 0x0c, 0x1e, 0x06, 0x27, 0x68,
	0x70, 0xa3, 0x25, 0xd2, 0x84, 0xe9, 0x83, 0xe3, 0x27, 0x3c, 0x89, 0xc3, 0xb7, 0x9a, 0xa4, 0xe1,
	0x9f, 0xad, 0xc9, 0x75, 0x98, 0xec, 0x67, 0xaa, 0x4e, 0x8d, 0xd6, 0xd6, 0x66, 0xba, 0x8d, 0xf6,
	0xb0, 0xd3, 0xd6, 0x36, 0xfc, 0xbc, 0xee, 0x72, 0x58, 0xd8, 0x15, 0x18, 0x28, 0xf4, 0xf1, 0xf5,
	0x00, 0xa5, 0x2a, 0x64, 0x97, 0x60, 0x8a, 0xf1, 0x08, 0xf7, 0x23, 0xa3, 0x68, 0x56, 0xe4, 0x16,
	0xd4, 0x8d, 0xb6, 0x63, 0x6b, 0xca, 0x99, 0x8c, 0xd2, 0xa0, 0xfc, 0x62, 0x8f, 0x38, 0x50, 0x1f,
	0xa2, 0x90, 0x31, 0x67, 0x4e, 0x4d, 0xe3, 0x8b, 0xa5, 0xbb, 0x0f, 0x8b, 0x85, 0xa0, 0x4c, 0x39,
	0x93, 0x78, 0x99, 0xe2, 0x08, 0x95, 0x3d, 0x4e, 0x75, 0x04, 0x0b, 0x47, 0x69, 0xf4, 0x97, 0xde,
	0xad, 0x8b, 0xbc, 0x67, 0x0e, 0x0b, 0xda, 0x7f, 0x75, 0x78, 0x00, 0x0b, 0x8f, 0x30, 0xc1, 0xca,
	0x0e, 0x57, 0xa0, 0x61, 0xa0, 0xfb, 0x91, 0xe1, 0xfa, 0x5d, 0xc8, 0x8c, 0x15, 0x6c, 0x95, 0x8d,
	0x45, 0x1a, 0x10, 0xe9, 0x8f, 0xd5, 0xf0, 0x8b, 0xa5, 0x7b, 0x1f, 0x56, 0x7c, 0x0c, 0xa2, 0x9d,
	0x24, 0x31, 0xce, 0xf6, 0xb8, 0x38, 0xe4, 0xd1, 0x65, 0x8c, 0xee, 0x0b, 0x58, 0x3d, 0xc3, 0xe5,
	0x1e, 0xaa, 0x01, 0xc9, 0x6d, 0x98, 0x36, 0xf9, 0xca, 0xb2, 0xc6, 0x39, 0xdb, 0x74, 0xf7, 0x80,
	0x64, 0x0a, 0x15, 0x03, 0xbb, 0x38, 0xfa, 0x67, 0x70, 0x35, 0xe7, 0xa9, 0x16, 0x55, 0xb5, 0xde,
	0xe8, 0x7e, 0xb7, 0x61, 0xce, 0x14, 0x9f, 0xe6, 0xe3, 0x82, 0xbc, 0x87, 0x25, 0x13, 0x89, 0xd9,
	0x90, 0x26, 0x12, 0x42, 0x33, 0x8a, 0x3f, 0xc5, 0xdc, 0xbc, 0x31, 0x76, 0xa2, 0x2c, 0x50, 0x77,
	0xf5, 0xe3, 0x8f, 0x9f, 0x9f, 0xed, 0x65, 0xb2, 0xe8, 0x0d, 0x3b, 0x5e, 0x91, 0x92, 0xf7, 0x2e,
	0xb7, 0xfd, 0x81, 0x3c, 0x87, 0xd9, 0xfc, 0x39, 0x15, 0x17, 0x74, 0xb4, 0xef, 0x92, 0x27, 0xdd,
	0xbc, 0x36, 0xba, 0x33, 0x96, 0x8a, 0xbb, 0xac, 0x45, 0xae, 0xb8, 0xff, 0x8d, 0x8a, 0x6c, 0x59,
	0x2d, 0x12, 0xc2, 0x6c, 0xde, 0x72, 0x63, 0xf4, 0x65, 0x3d, 0x9d, 0xd3, 0x97, 0xf6, 0x67, 0x71,
	0x87, 0x56, 0xf9, 0x1d, 0x1e, 0x7e, 0xb3, 0x3e, 0xed, 0x7c, 0xb5, 0xc8, 0x36, 0xfc, 0x6f, 0x00,
	0xd4, 0x8c, 0x62, 0xf7, 0xe6, 0xb9, 0x52, 0x73, 0x5e, 0x89, 0xf8, 0x65, 0xc0, 0x1e, 0x04, 0x11,
	0x3f, 0xc6, 0x76, 0xc8, 0x4f, 0xba, 0xb5, 0x4e, 0x7b, 0xa3, 0x65, 0x59, 0xdd, 0xf9, 0x20, 0x4d,
	0x93, 0x38, 0xd4, 0x53, 0xd7, 0x7b, 0x25, 0x39, 0xdb, 0x3a, 0x57, 0xf1, 0xb7, 0xa1, 0xb6, 0xb9,
	0xb1, 0x49, 0x36, 0xa1, 0xe5, 0xa3, 0x1a, 0x08, 0x86, 0x11, 0x3d, 0xed, 0x23, 0xa3, 0xaa, 0x8f,
	0x54, 0xa0, 0xe4, 0x03, 0x11, 0x22, 0x8d, 0x38, 0x4a, 0xca, 0xb8, 0xa2, 0xf8, 0x26, 0x96, 0xaa,
	0x4d, 0xa6, 0x60, 0xe2, 0x8b, 0x6d, 0xd5, 0x8f, 0xa7, 0xf4, 0x24, 0xbf, 0xf7, 0x2b, 0x00, 0x00,
	0xff, 0xff, 0xd4, 0xa3, 0x16, 0x9a, 0x32, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterServiceClient is the client API for ClusterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterServiceClient interface {
	// Read all clusters for a node
	ReadAllClustersForNode(ctx context.Context, in *ReadAllRequestForNodeCluster, opts ...grpc.CallOption) (*ReadAllResponseForNodeCluster, error)
	// Create new clusters
	CreateCluster(ctx context.Context, in *CreateRequestCluster, opts ...grpc.CallOption) (*CreateResponseCluster, error)
	// Delete cluster from node
	DeleteCluster(ctx context.Context, in *DeleteRequestCluster, opts ...grpc.CallOption) (*DeleteResponseCluster, error)
}

type clusterServiceClient struct {
	cc *grpc.ClientConn
}

func NewClusterServiceClient(cc *grpc.ClientConn) ClusterServiceClient {
	return &clusterServiceClient{cc}
}

func (c *clusterServiceClient) ReadAllClustersForNode(ctx context.Context, in *ReadAllRequestForNodeCluster, opts ...grpc.CallOption) (*ReadAllResponseForNodeCluster, error) {
	out := new(ReadAllResponseForNodeCluster)
	err := c.cc.Invoke(ctx, "/v1.ClusterService/ReadAllClustersForNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterServiceClient) CreateCluster(ctx context.Context, in *CreateRequestCluster, opts ...grpc.CallOption) (*CreateResponseCluster, error) {
	out := new(CreateResponseCluster)
	err := c.cc.Invoke(ctx, "/v1.ClusterService/CreateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterServiceClient) DeleteCluster(ctx context.Context, in *DeleteRequestCluster, opts ...grpc.CallOption) (*DeleteResponseCluster, error) {
	out := new(DeleteResponseCluster)
	err := c.cc.Invoke(ctx, "/v1.ClusterService/DeleteCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterServiceServer is the server API for ClusterService service.
type ClusterServiceServer interface {
	// Read all clusters for a node
	ReadAllClustersForNode(context.Context, *ReadAllRequestForNodeCluster) (*ReadAllResponseForNodeCluster, error)
	// Create new clusters
	CreateCluster(context.Context, *CreateRequestCluster) (*CreateResponseCluster, error)
	// Delete cluster from node
	DeleteCluster(context.Context, *DeleteRequestCluster) (*DeleteResponseCluster, error)
}

// UnimplementedClusterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClusterServiceServer struct {
}

func (*UnimplementedClusterServiceServer) ReadAllClustersForNode(ctx context.Context, req *ReadAllRequestForNodeCluster) (*ReadAllResponseForNodeCluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAllClustersForNode not implemented")
}
func (*UnimplementedClusterServiceServer) CreateCluster(ctx context.Context, req *CreateRequestCluster) (*CreateResponseCluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCluster not implemented")
}
func (*UnimplementedClusterServiceServer) DeleteCluster(ctx context.Context, req *DeleteRequestCluster) (*DeleteResponseCluster, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCluster not implemented")
}

func RegisterClusterServiceServer(s *grpc.Server, srv ClusterServiceServer) {
	s.RegisterService(&_ClusterService_serviceDesc, srv)
}

func _ClusterService_ReadAllClustersForNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllRequestForNodeCluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).ReadAllClustersForNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ClusterService/ReadAllClustersForNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).ReadAllClustersForNode(ctx, req.(*ReadAllRequestForNodeCluster))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterService_CreateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequestCluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).CreateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ClusterService/CreateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).CreateCluster(ctx, req.(*CreateRequestCluster))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterService_DeleteCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequestCluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).DeleteCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ClusterService/DeleteCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).DeleteCluster(ctx, req.(*DeleteRequestCluster))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ClusterService",
	HandlerType: (*ClusterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadAllClustersForNode",
			Handler:    _ClusterService_ReadAllClustersForNode_Handler,
		},
		{
			MethodName: "CreateCluster",
			Handler:    _ClusterService_CreateCluster_Handler,
		},
		{
			MethodName: "DeleteCluster",
			Handler:    _ClusterService_DeleteCluster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster-service.proto",
}
