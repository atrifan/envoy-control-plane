{
  "swagger": "2.0",
  "info": {
    "title": "Cluster service",
    "version": "1.0",
    "contact": {
      "name": "Cluster service",
      "email": "trifan@adobe.com"
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/clusters": {
      "post": {
        "summary": "Create new clusters",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRequest"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "put": {
        "summary": "Update cluster on node",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRequest"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "patch": {
        "summary": "Update cluster on node",
        "operationId": "Update2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRequest"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/v1/clusters/{nodeId}": {
      "get": {
        "summary": "Read all clusters for a node",
        "operationId": "ReadAllClustersForNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReadAllResponseForNode"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "nodeId",
            "description": "API versioning: it is my best practice to specify version explicitly",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/v1/clusters/{nodeId}/version/{versionId}": {
      "delete": {
        "summary": "Delete cluster from node",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "nodeId",
            "description": "node id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionId",
            "description": "version of cluster to delete",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/v1/clusters/{nodeId}/version/{version}": {
      "get": {
        "summary": "Read cluster from node",
        "operationId": "Read",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReadResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "nodeId",
            "description": "The nodeId where you want to get the cluster from",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "description": "The version of the cluster that you want to retrieve",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    }
  },
  "definitions": {
    "v1Cluster": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "title": "Unique clusterName"
        },
        "LbPolicy": {
          "type": "string",
          "title": "Type of lb policy"
        },
        "hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Hosts"
          },
          "title": "list of hosts"
        },
        "version": {
          "type": "string",
          "title": "unique cluster version"
        }
      },
      "title": "Cluster message\nlast id 4"
    },
    "v1CreateRequest": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "title": "for which node to create the cluster"
        },
        "cluster": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Cluster"
          },
          "title": "List of clusters"
        }
      },
      "title": "Request data to create new Cluster"
    },
    "v1CreateResponse": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "title": "The node where the cluster has been created"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "versions of the created clusters"
        }
      },
      "title": "Contains data of created Cluster\nlast id 2"
    },
    "v1DeleteResponse": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "title": "nodeId response"
        },
        "deleted": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "contains the versions of deleted clusters"
        }
      },
      "title": "Contains status of delete operation"
    },
    "v1Hosts": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Hosts message\nlast id = 2"
    },
    "v1ReadAllResponseForNode": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "title": "API versioning: it is my best practice to specify version explicitly"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Cluster"
          },
          "title": "List of all todo tasks"
        }
      },
      "title": "Contains list of all clusters on a node"
    },
    "v1ReadResponse": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string"
        },
        "cluster": {
          "$ref": "#/definitions/v1Cluster"
        }
      }
    },
    "v1UpdateRequest": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "title": "node for which we create a cluster"
        },
        "cluster": {
          "$ref": "#/definitions/v1Cluster",
          "title": "Cluster object to update"
        }
      },
      "title": "Request data to update a cluster"
    },
    "v1UpdateResponse": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "title": "API versioning: it is my best practice to specify version explicitly"
        },
        "version": {
          "type": "string",
          "title": "Contains number of entities have beed updated\nEquals 1 in case of succesfull update"
        }
      },
      "title": "Contains status of update operation"
    }
  }
}
